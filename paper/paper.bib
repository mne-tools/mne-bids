@article{Gorgolewski2016,
  title    = "The brain imaging data structure, a format for organizing and
              describing outputs of neuroimaging experiments",
  author   = {Gorgolewski, Krzysztof J and
              Auer, Tibor and
              Calhoun, Vince D and
              Craddock, R Cameron and
              Das, Samir and
              Duff, Eugene P and
              Flandin, Guillaume and
              Ghosh, Satrajit S and
              Glatard, Tristan and
              Halchenko, Yaroslav O and
              Handwerker, Daniel A and
              Hanke, Michael and
              Keator, David and
              Li, Xiangrui and
              Michael, Zachary and
              Maumet, Camille and
              Nichols, B Nolan and
              Nichols, Thomas E and
              Pellman, John and
              Poline, Jean-Baptiste and
              Rokem, Ariel and
              Schaefer, Gunnar and
              Sochat, Vanessa and
              Triplett, William and
              Turner, Jessica A and
              Varoquaux, Ga{\"e}l and
              Poldrack, Russell A},
  abstract = "The development of magnetic resonance imaging (MRI) techniques
              has defined modern neuroimaging. Since its inception, tens of
              thousands of studies using techniques such as functional MRI and
              diffusion weighted imaging have allowed for the non-invasive
              study of the brain. Despite the fact that MRI is routinely used
              to obtain data for neuroscience research, there has been no
              widely adopted standard for organizing and describing the data
              collected in an imaging experiment. This renders sharing and
              reusing data (within or between labs) difficult if not impossible
              and unnecessarily complicates the application of automatic
              pipelines and quality assurance protocols. To solve this problem,
              we have developed the Brain Imaging Data Structure (BIDS), a
              standard for organizing and describing MRI datasets. The BIDS
              standard uses file formats compatible with existing software,
              unifies the majority of practices already common in the field,
              and captures the metadata necessary for most common data
              processing operations.",
  journal  = "Scientific Data",
  volume   =  3,
  pages    = "160044",
  month    =  jun,
  year     =  2016,
  doi      =  {10.1038/sdata.2016.44},
  language = "en"
}

@article{Agramfort2013,
  title    = "",
  author   = {},
  abstract = "Magnetoencephalography and electroencephalography (M/EEG) measure
              the weak electromagnetic signals generated by neuronal activity
              in the brain. Using these signals to characterize and locate
              neural activation in the brain is a challenge that requires
              expertise in physics, signal processing, statistics, and
              numerical methods. As part of the MNE software suite, MNE-Python
              is an open-source software package that addresses this challenge
              by providing state-of-the-art algorithms implemented in Python
              that cover multiple methods of data preprocessing,
              source localization, statistical analysis, and estimation of
              functional connectivity between distributed brain regions. All
              algorithms and utility functions are implemented in a consistent
              manner with well-documented interfaces, enabling users to create
              M/EEG data analysis pipelines by writing Python scripts.
              Moreover, MNE-Python is tightly integrated with the core Python
              libraries for scientific comptutation (NumPy, SciPy) and
              visualization (matplotlib and Mayavi), as well as the greater
              neuroimaging ecosystem in Python via the Nibabel package. The
              code is provided under the new BSD license allowing code reuse,
              even in commercial products. Although MNE-Python has only been
              under heavy development for a couple of years, it has rapidly
              evolved with expanded analysis capabilities and pedagogical
              tutorials because multiple labs have collaborated during code
              development to help share best practices. MNE-Python also gives
              easy access to preprocessed datasets, helping users to get
              started quickly and facilitating reproducibility of methods
              by other researchers. Full documentation, including dozens of
              examples, is available at http://martinos.org/mne.",
  journal  = "Scientific Data",
  volume   =  3,
  pages    = "160044",
  month    =  jun,
  year     =  2016,
  doi      =  {10.1038/sdata.2016.44},
  language = "en"
}
