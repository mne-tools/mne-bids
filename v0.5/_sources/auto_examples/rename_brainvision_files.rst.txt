.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_rename_brainvision_files.py>`     to download the full example code or to run this example in your browser via Binder
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_rename_brainvision_files.py:


=====================================
06. Rename BrainVision EEG data files
=====================================

According to the EEG extension to BIDS [1]_, the `BrainVision data format`_ is
one of the recommended formats to store EEG data within a BIDS dataset.

To organize EEG data in BIDS format, it is often necessary to rename the files.
In the case of BrainVision files, we would have to rename multiple files for
each recording:

1. A text header file (``.vhdr``) containing meta data
2. A text marker file (``.vmrk``) containing information about events in the
   data
3. A binary data file (``.eeg``) containing the voltage values of the EEG

.. Note:: The three files contain references that guide the data reading
          software. Simply *renaming* the files without adjusting these
          references will corrupt the dataset! But relax, MNE-BIDS can take
          care of this for you.

In this example, we use MNE-BIDS to rename BrainVision data files including a
repair of the internal file links

For the command line version of this tool, see the :code:`cp` tool in the docs
for the :ref:`Python Command Line Interface <python_cli>`.

References
----------
.. [1] Pernet, C.R., Appelhoff, S., Gorgolewski, K.J. et al. EEG-BIDS, an
       extension to the brain imaging data structure for
       electroencephalography. Sci Data 6, 103 (2019).
       https://doi.org/10.1038/s41597-019-0104-8
.. _BrainVision data format: https://www.brainproducts.com/productdetails.php?id=21&tab=5


.. code-block:: default


    # Authors: Stefan Appelhoff <stefan.appelhoff@mailbox.org>
    #
    # License: BSD (3-clause)








We are importing everything we need for this example:


.. code-block:: default

    import os.path as op

    import mne

    from mne_bids.copyfiles import copyfile_brainvision








Download some example data
--------------------------
To demonstrate the MNE-BIDS functions, we need some testing data. Here, we
will use the MNE-Python testing data. Feel free to use your own BrainVision
data.

.. warning:: This will download 1.6 GB of data!


.. code-block:: default


    data_path = mne.datasets.testing.data_path()
    examples_dir = op.join(data_path, 'Brainvision')








Rename the recording
--------------------
Above, at the top of the example, we imported
:func:`mne_bids.copyfiles.copyfile_brainvision` from
the MNE-BIDS ``mne_bids/copyfiles.py`` module. This function takes two
main inputs:
First, the path to the existing ``.vhdr`` file. And second, the path to
the future ``.vhdr`` file.

With the optional ``verbose`` parameter you can furthermore determine how
much information you want to get during the procedure.

:func:`mne_bids.copyfiles.copyfile_brainvision` will then create three new
files (``.vhdr``, ``.vmrk``, and ``.eeg``) with the new names as provided
with the second argument.

Here, we rename a test file name:


.. code-block:: default


    # Rename the file
    vhdr_file = op.join(examples_dir, 'Analyzer_nV_Export.vhdr')
    vhdr_file_renamed = op.join(examples_dir, 'test_renamed.vhdr')
    copyfile_brainvision(vhdr_file, vhdr_file_renamed, verbose=True)

    # Check that MNE-Python can read in both, the original as well as the renamed
    # data (two files: their contents are the same apart from the name)
    raw = mne.io.read_raw_brainvision(vhdr_file)
    raw_renamed = mne.io.read_raw_brainvision(vhdr_file_renamed)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Detected file encoding: UTF-8 (read from header).
    Created "test_renamed.eeg" in "/Users/hoechenberger/mne_data/MNE-testing-data/Brainvision".
    Created "test_renamed.vhdr" in "/Users/hoechenberger/mne_data/MNE-testing-data/Brainvision".
    Created "test_renamed.vmrk" in "/Users/hoechenberger/mne_data/MNE-testing-data/Brainvision".
    Extracting parameters from /Users/hoechenberger/mne_data/MNE-testing-data/Brainvision/Analyzer_nV_Export.vhdr...
    Setting channel info structure...
    Extracting parameters from /Users/hoechenberger/mne_data/MNE-testing-data/Brainvision/test_renamed.vhdr...
    Setting channel info structure...




Further information
-------------------

For converting data files, or writing new data to the BrainVision format, you
can use the `pybv`_ Python package.

There is node JS tool to check the integrity of your BrainVision files.
For that, see the `BrainVision Validator <bv-validator_>`_

.. _`pybv`: https://github.com/bids-standard/pybv
.. _`bv-validator`: https://github.com/sappelhoff/brainvision-validator


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.035 seconds)


.. _sphx_glr_download_auto_examples_rename_brainvision_files.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/mne-tools/mne-bids/gh-pages?filepath=v0.5/notebooks/auto_examples/rename_brainvision_files.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: rename_brainvision_files.py <rename_brainvision_files.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: rename_brainvision_files.ipynb <rename_brainvision_files.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
