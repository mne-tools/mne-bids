language: c
dist: xenial

node_js:
  - "10.16.1"

matrix:
    include:
        # Linux
        - os: linux
          env: CONDA_ENV="environment.yml"
               MNE_VERSION="master"
          name: "Linux conda full"

        # OSX conda
        - os: osx
          env: CONDA_ENV="environment.yml"
               MNE_VERSION="master"
          name: "MacOS conda full"

        # Minimal
        - os: linux
          env: DEPS=minimal
               MINIMAL_DEPENDENCIES="numpy>=1.14 scipy>=0.18.1"
               MNE_VERSION="maint/0.19"
          name: "Linux pip minimal"

# Specify version of BIDS-validator to be used, 'master', or 'stable'
env:
  global:
    # can be "stable", or anything that can be used with git checkout
    - VALIDATOR_VERSION="347117838f2b929e"
    # can be any branch of MNE-Python (e.g., "maint/0.18", "master", ...)

before_install:
  - if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
        wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    else
        wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi;
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p ${HOME}/miniconda
  - export PATH=${HOME}/miniconda/bin:$PATH
  - conda update --yes --quiet conda
  - npm install -g npm stable
  - npm install -g node@10.16.1 --force
  - npm --version
  - node --version
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
      brew install yarn;
    fi
  - yarn --version

install:
    - echo $PATH
    - |
      if [ $VALIDATOR_VERSION == 'stable' ];then
          npm install -g bids-validator
      else
          pushd ~
          git clone https://github.com/bids-standard/bids-validator
          cd bids-validator
          git checkout $VALIDATOR_VERSION
          yarn
          export PATH=~/bids-validator/bids-validator/bin:$PATH
          popd
      fi
    - echo $PATH
    - bids-validator --version
    - which bids-validator
    - |
      if [ "${DEPS}" == "minimal" ]; then
          pip install $MINIMAL_DEPENDENCIES
          pip install "pytest<5.4.0" pytest-cov check-manifest pydocstyle flake8  # for testing
      else
          conda env create -f $CONDA_ENV --name=testenv
          source activate testenv
          pip uninstall --yes --quiet mne  # uninstall the pip version of mne to install dev version below
      fi;
      git clone --depth 1 https://github.com/mne-tools/mne-python.git -b $MNE_VERSION
      cd mne-python
      pip install --no-deps -e .
      cd ../
    - python setup.py develop

# Cache the python dependencies
# https://blog.travis-ci.com/2016-05-03-caches-are-coming-to-everyone
cache:
    - pip
    - yarn

script:
    - pytest . --cov=./mne_bids --cov-report=xml --verbose --ignore mne-python
    - make pep

after_success:
  - bash <(curl -s https://codecov.io/bash)
